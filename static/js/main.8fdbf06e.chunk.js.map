{"version":3,"sources":["actions/actions.js","actions/actionTypes.js","components/City.js","components/CityList.js","containers/CitiesContainer.js","components/Country.js","components/CountryList.js","containers/CountriesContainer.js","components/AddCityForm.js","containers/AddCityContainer.js","components/App.js","redusers/initialState.js","redusers/citiesReducer.js","redusers/index.js","redusers/countriesReducer.js","index.js","store/configureStore.js"],"names":["removeCity","id","type","editCity","title","desc","City","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","editing","titleRef","React","createRef","descRef","submit","bind","assertThisInitialized","onEditClick","onCancelClick","e","preventDefault","current","value","props","setState","_this$props","react_default","a","createElement","reactstrap_es","onSubmit","innerRef","defaultValue","color","onClick","className","Component","CityList","_ref","_ref$cities","cities","_ref$removeCity","f","_ref$editCity","map","city","components_City","assign","key","concat","connect","filter","country_id","countryActive","dispatch","bindActionCreators","Country","text","onSelectCountry","style","cursor","CountryList","_ref$countries","countries","_ref$onSelectCountry","_ref$countryActive","country","components_Country","toConsumableArray","setCountry","AddCityForm","collapse","toggle","addNewCity","focus","size","block","isOpen","placeholder","v4","addCity","App","xs","CountriesContainer","AddCityContainer","CitiesContainer","initialState","arguments","length","undefined","action","objectSpread","rootReducer","combineReducers","c","store","createStore","subscribe","console","log","getState","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.8fdbf06e.chunk.js","sourcesContent":["import * as types from './actionTypes';\r\nimport { v4 } from 'uuid';\r\n\r\nexport const addCity = (country_id, title, desc) =>\r\n  ({\r\n    type: types.ADD_CITY,\r\n    id: v4(),\r\n    country_id,\r\n    title,\r\n    desc\r\n  });\r\n\r\nexport const removeCity = (id) =>\r\n  ({\r\n    type: types.REMOVE_CITY,\r\n    id\r\n  });\r\n\r\nexport const editCity = (id, title, desc) =>\r\n  ({\r\n    type: types.EDIT_CITY,\r\n    id,\r\n    title,\r\n    desc\r\n  });\r\n\r\nexport const setCountry = (country_id) =>\r\n  ({\r\n    type: types.SELECT_COUNTRY,\r\n    country_id\r\n  });","export const ADD_CITY = 'ADD_CITY';\r\nexport const REMOVE_CITY = 'REMOVE_CITY';\r\nexport const EDIT_CITY = 'EDIT_CITY';\r\nexport const SELECT_COUNTRY = 'SET_COUNTRY';","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  ListGroupItem,\r\n  ListGroupItemHeading,\r\n  ListGroupItemText,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input\r\n} from 'reactstrap';\r\n\r\nclass City extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      editing: false\r\n    }\r\n\r\n    this.titleRef = React.createRef();\r\n    this.descRef = React.createRef();\r\n\r\n    this.submit = this.submit.bind(this);\r\n    this.onEditClick = this.onEditClick.bind(this);\r\n    this.onCancelClick = this.onCancelClick.bind(this);\r\n  }\r\n\r\n  submit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!this.titleRef.current.value) return;\r\n    \r\n    this.props.editCity(\r\n      this.titleRef.current.value,\r\n      this.descRef.current.value\r\n    );\r\n\r\n    this.setState({\r\n      editing: false\r\n    });\r\n  }\r\n\r\n  onEditClick() {\r\n    this.setState({\r\n      editing: true\r\n    })\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.setState({\r\n      editing: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { title, desc, removeCity } = this.props;\r\n\r\n    if (this.state.editing) {\r\n      return (\r\n        <ListGroupItem>\r\n            <h5>Edit City — { title }</h5>\r\n            <Form onSubmit={this.submit}>\r\n              <FormGroup>\r\n                <Input\r\n                  innerRef={this.titleRef}\r\n                  type=\"text\"\r\n                  defaultValue={title}>\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Input\r\n                  innerRef={this.descRef}\r\n                  type=\"textarea\"\r\n                  defaultValue={desc}>\r\n                </Input>\r\n              </FormGroup>\r\n              <Button color=\"primary\">Save</Button>{' '}\r\n              <Button color=\"link\" onClick={this.onCancelClick}>\r\n                Cancel\r\n              </Button>\r\n            </Form>\r\n          </ListGroupItem>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ListGroupItem>\r\n        <div className=\"float-right\">\r\n          <Button color=\"primary\" onClick={this.onEditClick}>Edit</Button>{' '}\r\n          <Button color=\"link\" onClick={removeCity}>Remove</Button>\r\n        </div>\r\n        <ListGroupItemHeading>{title}</ListGroupItemHeading>\r\n        <ListGroupItemText>{desc}</ListGroupItemText>\r\n      </ListGroupItem>\r\n    );\r\n  }\r\n}\r\n\r\nCity.propTypes = {\r\n  title: PropTypes.string,\r\n  desc: PropTypes.string,\r\n  removeCity: PropTypes.func,\r\n  editCity: PropTypes.func\r\n};\r\n\r\nexport default City;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport City from './City';\r\nimport { ListGroup } from 'reactstrap';\r\n\r\nconst CityList = ({ cities=[], removeCity=f=>f, editCity=f=>f }) =>\r\n  (\r\n    <ListGroup>\r\n      {\r\n        cities.map(city =>\r\n          <City\r\n            key={`city-${city.id}`}\r\n            {...city}\r\n            removeCity={() =>\r\n              removeCity(city.id)\r\n            }\r\n            editCity={(title, desc) =>\r\n              editCity(city.id, title, desc)\r\n            }\r\n          />\r\n        )\r\n      }\r\n    </ListGroup>\r\n  );\r\n\r\nCityList.propTypes = {\r\n  cities: PropTypes.array,\r\n  removeCity: PropTypes.func,\r\n  editCity: PropTypes.func\r\n};\r\n\r\nexport default CityList;","import { connect } from 'react-redux';\r\nimport { removeCity, editCity } from '../actions/actions';\r\nimport { bindActionCreators } from 'redux'\r\nimport CityList from '../components/CityList';\r\n\r\nconst mapStateToProps = (state) =>\r\n  ({\r\n    cities: state.cities.filter(city =>\r\n      city.country_id === state.countryActive\r\n    ),\r\n    countryActive: state.countryActive\r\n  });\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators({ removeCity, editCity }, dispatch);\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CityList)","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  ListGroupItem,\r\n  ListGroupItemHeading,\r\n  ListGroupItemText\r\n} from 'reactstrap';\r\n\r\nclass Country extends Component {\r\n  render() {\r\n    const { id, title, text, onSelectCountry, countryActive } = this.props;\r\n    return (\r\n      <ListGroupItem\r\n        style={{cursor: 'pointer'}}\r\n        className={\r\n          (id === countryActive) ?\r\n          'active' :\r\n          ''\r\n        }\r\n        onClick={onSelectCountry}\r\n      >\r\n        <ListGroupItemHeading>{title}</ListGroupItemHeading>\r\n        <ListGroupItemText>{text}</ListGroupItemText>\r\n      </ListGroupItem>\r\n    );\r\n  }\r\n}\r\n\r\nCountry.propTypes = {\r\n  id: PropTypes.number,\r\n  title: PropTypes.string,\r\n  text: PropTypes.string,\r\n  countryActive: PropTypes.number,\r\n  onSelectCountry: PropTypes.func\r\n};\r\n\r\nexport default Country;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Country from './Country';\r\nimport { ListGroup } from 'reactstrap';\r\n\r\nconst CountryList = ({ countries=[], onSelectCountry=f=>f, countryActive=1 }) =>\r\n  (\r\n    <ListGroup>\r\n      {\r\n        countries.map(country =>\r\n          <Country\r\n            key={`country-${country.id}`}\r\n            {...country}\r\n            onSelectCountry={\r\n              () => onSelectCountry(country.id)\r\n            }\r\n            countryActive={countryActive}\r\n          />\r\n        )\r\n      }\r\n    </ListGroup>\r\n  );\r\n\r\nCountryList.propTypes = {\r\n  countries: PropTypes.array,\r\n  countryActive: PropTypes.number,\r\n  onSelectCountry: PropTypes.func\r\n};\r\n\r\nexport default CountryList;","import { connect } from 'react-redux';\r\nimport { setCountry } from '../actions/actions';\r\nimport CountryList from '../components/CountryList';\r\n\r\nconst mapStateToProps = (state) =>\r\n  ({\r\n    countries: [ ...state.countries ],\r\n    countryActive: state.countryActive\r\n  });\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  ({\r\n    onSelectCountry: country_id =>\r\n      dispatch(setCountry(country_id))\r\n  });\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CountryList)","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Button,\r\n  Input,\r\n  Form,\r\n  FormGroup,\r\n  Collapse\r\n} from 'reactstrap';\r\n\r\nclass AddCityForm extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      collapse: false\r\n    }\r\n\r\n    this.titleRef = React.createRef();\r\n    this.descRef = React.createRef();\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.submit = this.submit.bind(this);\r\n  }\r\n\r\n  submit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!this.titleRef.current.value) return;\r\n    \r\n    this.props.addNewCity(\r\n      this.props.countryActive,\r\n      this.titleRef.current.value,\r\n      this.descRef.current.value\r\n    )\r\n\r\n    this.titleRef.current.value = '';\r\n    this.descRef.current.value = '';\r\n    this.titleRef.current.focus();\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({ collapse: !this.state.collapse });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ListGroup>\r\n        <ListGroupItem>\r\n          <Button\r\n            color=\"primary\"\r\n            size=\"lg\"\r\n            block\r\n            onClick={this.toggle}\r\n          >\r\n            Add City\r\n          </Button>\r\n          <Collapse isOpen={this.state.collapse}>\r\n            <Form onSubmit={this.submit}>\r\n              <h5 className=\"mt\">Add City</h5>\r\n              <FormGroup>\r\n                <Input\r\n                  innerRef={this.titleRef}\r\n                  type=\"text\"\r\n                  placeholder=\"City name\">\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  innerRef={this.descRef}\r\n                  placeholder=\"City description\">\r\n                </Input>\r\n              </FormGroup>\r\n              <Button color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Collapse>\r\n        </ListGroupItem>\r\n      </ListGroup>\r\n    );\r\n  }\r\n}\r\n\r\nAddCityForm.propTypes = {\r\n  countryActive: PropTypes.number,\r\n  addNewCity: PropTypes.func\r\n};\r\n\r\nexport default AddCityForm;","import { connect } from 'react-redux';\r\nimport { addCity } from '../actions/actions';\r\nimport AddCityForm from '../components/AddCityForm';\r\n\r\nconst mapStateToProps = (state) =>\r\n  ({\r\n    countryActive: state.countryActive\r\n  });\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  ({\r\n    addNewCity: (country_id, title, desc) =>\r\n      dispatch(addCity(country_id, title, desc))\r\n  });\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddCityForm)","import React, { Component } from 'react';\nimport CitiesContainer from '../containers/CitiesContainer';\nimport CountriesContainer from '../containers/CountriesContainer';\nimport AddCityContainer from '../containers/AddCityContainer';\nimport {\n  Container,\n  Row,\n  Col\n} from 'reactstrap';\n\nclass App extends Component {\n  render() {\n    return (\n      <Container>\n        <br />\n        <Row>\n          <Col xs=\"4\">\n            <h5>Countries</h5>\n            <CountriesContainer />\n          </Col>\n          <Col xs=\"8\">\n            <h5>Cities</h5>\n            <AddCityContainer />\n            <CitiesContainer />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const countries = [\r\n  {\r\n    id: 1,\r\n    title: \"United Kingdom\",\r\n    text: \"The United Kingdom of Great Britain and Northern Ireland, commonly known as the United Kingdom (UK) or Britain, is a sovereign state in Europe.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"France\",\r\n    text: \"France, officially the French Republic (French: R\\u00e9publique fran\\u00e7aise), is a unitary sovereign state comprising territory in western Europe and several overseas regions and territories.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Spain\",\r\n    text: \"Spain (Spanish: Espa\\u00f1a), officially the Kingdom of Spain (Spanish: Reino de Espa\\u00f1a), is a sovereign state located on the Iberian Peninsula in southwestern Europe.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Germany\",\r\n    text: \"Germany, officially the Federal Republic of Germany (German: Bundesrepublik Deutschland), is a federal parliamentary republic in western-central Europe.\"\r\n  }\r\n];\r\n\r\nconst cities = [\r\n  {\r\n    id: 1,\r\n    country_id: 1,\r\n    title: \"London\",\r\n    desc: \"\"\r\n  },\r\n  {\r\n    id: 2,\r\n    country_id: 1,\r\n    title: \"Liverpool\",\r\n    desc: \"\"\r\n  },\r\n  {\r\n    id: 3,\r\n    country_id: 2,\r\n    title: \"Paris\",\r\n    desc: \"\"\r\n  },\r\n  {\r\n    id: 4,\r\n    country_id: 3,\r\n    title: \"Madrid\",\r\n    desc: \"\"\r\n  },\r\n  {\r\n    id: 5,\r\n    country_id: 4,\r\n    title: \"Berlin\",\r\n    desc: \"\"\r\n  },\r\n  {\r\n    id: 6,\r\n    country_id: 4,\r\n    title: \"Munich\",\r\n    desc: \"\"\r\n  },\r\n  {\r\n    id: 7,\r\n    country_id: 4,\r\n    title: \"Hamburg\",\r\n    desc: \"\"\r\n  }\r\n];\r\n\r\nexport const initialState ={\r\n  countries,\r\n  cities,\r\n  countryActive: 1\r\n};","import * as types from '../actions/actionTypes';\r\nimport { initialState } from './initialState';\r\n\r\nexport const city = (state={}, action) => {\r\n  switch (action.type) {\r\n    case types.ADD_CITY:\r\n      return {\r\n        id: action.id,\r\n        country_id: action.country_id,\r\n        title: action.title,\r\n        desc: action.desc\r\n      }\r\n    case types.EDIT_CITY:\r\n      return (state.id !== action.id) ?\r\n        state :\r\n        {\r\n          ...state,\r\n          title: action.title,\r\n          desc: action.desc\r\n        }\r\n      default:\r\n        return state;\r\n  }\r\n}\r\n\r\nexport const cities = (state=initialState.cities, action) => {\r\n  switch (action.type) {\r\n    case types.ADD_CITY:\r\n      return [\r\n        ...state,\r\n        city({}, action)\r\n      ];\r\n    case types.REMOVE_CITY:\r\n      return state.filter(city =>\r\n        city.id !== action.id\r\n      )\r\n    case types.EDIT_CITY:\r\n        return state.map(\r\n          c => city(c, action)\r\n        )\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport { countries, countryActive } from './countriesReducer';\r\nimport { cities } from './citiesReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  countries,\r\n  cities,\r\n  countryActive\r\n});\r\n\r\nexport default rootReducer;","import * as types from '../actions/actionTypes';\r\nimport { initialState } from './initialState';\r\n\r\nexport const countries = (state=initialState.countries, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const countryActive = (state=initialState.countryActive, action) => {\r\n  switch (action.type) {\r\n    case types.SELECT_COUNTRY:\r\n      return action.country_id;\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport configureStore from './store/configureStore';\nimport { Provider } from 'react-redux';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/style.css';\n\nconst store = configureStore();\n\nstore.subscribe(() => console.log(store.getState()));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);","import {createStore } from 'redux'; \r\nimport rootReducer from '../redusers';  \r\n\r\nexport default function configureStore() {\r\n  return createStore(\r\n    rootReducer\r\n  );\r\n}"],"sourceRoot":""}